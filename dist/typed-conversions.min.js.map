{"version":3,"file":"typed-conversions.min.js","sources":["../lib/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction removeIdPropertyFromHash(hash, idProp = \"id\") {\n    const output = {};\n    Object.keys(hash).map((objId) => {\n        const input = hash[objId];\n        output[objId] = {};\n        Object.keys(input).map(prop => {\n            if (prop !== idProp) {\n                output[objId][prop] = input[prop];\n            }\n        });\n    });\n    return output;\n}\nexports.removeIdPropertyFromHash = removeIdPropertyFromHash;\nfunction hashToArray(hashObj, __key__ = \"id\") {\n    if (hashObj && typeof hashObj !== \"object\") {\n        throw new Error(\"Cant convert hash-to-array because hash was not passed in: \" + hashObj);\n    }\n    const hash = Object.assign({}, hashObj);\n    const results = [];\n    Object.keys(hash).forEach(id => {\n        const obj = hash[id];\n        const allEqualTrue = (prev, curr) => {\n            return obj[curr] !== true ? false : prev;\n        };\n        const isScalar = Object.keys(obj).reduce(allEqualTrue, true) ? true : false;\n        const key = isScalar\n            ? results.push(id)\n            : results.push(isScalar ? id : Object.assign({}, obj, { [__key__]: id }));\n    });\n    return results;\n}\nexports.hashToArray = hashToArray;\nfunction flatten(list) {\n    return list.reduce((a, b) => a.concat(Array.isArray(b) ? flatten(b) : b), []);\n}\nexports.flatten = flatten;\nfunction arrayToHash(arr, keyProperty) {\n    if (arr.length === 0) {\n        return {};\n    }\n    const isScalar = typeof arr[0] === \"object\" ? false : true;\n    if (isScalar && keyProperty) {\n        const e = new Error(`You can not have an array of primitive values AND set a keyProperty!`);\n        e.name = \"NotAllowed\";\n        throw e;\n    }\n    if (!keyProperty && !isScalar) {\n        if (arr[0].hasOwnProperty(\"id\")) {\n            keyProperty = \"id\";\n        }\n        else {\n            const e = new Error(`Tried to default to a keyProperty of \"id\" but that property does not appear to be in the array passed in`);\n            e.name = \"NotAllowed\";\n            throw e;\n        }\n    }\n    if (!Array.isArray(arr)) {\n        const e = new Error(`arrayToHash: input was not an array!`);\n        e.name = \"NotAllowed\";\n        throw e;\n    }\n    const output = arr.reduce((prev, curr) => {\n        const key = isScalar ? curr : curr[keyProperty];\n        return isScalar\n            ? Object.assign({}, prev, { [key]: true }) : Object.assign({}, prev, { [key]: curr });\n    }, {});\n    return output;\n}\nexports.arrayToHash = arrayToHash;\nfunction snapshotToArray(snap, idProp = \"id\") {\n    const hash = snap.val() || {};\n    return hashToArray(hash, idProp);\n}\nexports.snapshotToArray = snapshotToArray;\nfunction snapshotToHash(snap, idProp = \"id\") {\n    const hash = snap.val() || {};\n    Object.keys(hash).forEach(key => typeof hash[key] === \"object\"\n        ? (hash[key][idProp] = key)\n        : (hash[key] = { [idProp]: key, value: hash[key] }));\n    return hash;\n}\nexports.snapshotToHash = snapshotToHash;\nfunction snapshotToOrderedArray(snap, idProp = \"id\") {\n    const output = [];\n    snap.forEach((child) => {\n        const obj = child.val();\n        const key = child.key;\n        if (typeof obj !== \"object\") {\n            throw new Error(`Can't create a list from scalar values: \"${obj}\" | \"${key}\"`);\n        }\n        output.push(Object.assign({ [idProp]: key }, obj));\n        return true;\n    });\n    return output;\n}\nexports.snapshotToOrderedArray = snapshotToOrderedArray;\nfunction snapshotToOrderedHash(snap, idProp = \"id\") {\n    const orderedArray = this.snapshotToOrderedArray(snap, idProp);\n    return this.arrayToHash(orderedArray);\n}\nexports.snapshotToOrderedHash = snapshotToOrderedHash;\n//# sourceMappingURL=index.js.map"],"names":["hashToArray","hashObj","__key__","_typeof","Error","hash","Object","assign","results","keys","forEach","obj","id","isScalar","reduce","prev","curr","push","defineProperty","exports","removeIdPropertyFromHash","idProp","output","map","objId","input","prop","flatten","list","a","b","concat","Array","isArray","arrayToHash","arr","keyProperty","length","e","name","hasOwnProperty","key","snapshotToArray","snap","val","snapshotToHash","snapshotToOrderedArray","child","snapshotToOrderedHash","orderedArray","this"],"mappings":"ofAgBA,SAASA,EAAYC,OAASC,yDAAU,QAChCD,GAA8B,WAAnBE,EAAOF,SACZ,IAAIG,MAAM,8DAAgEH,OAE9EI,EAAOC,OAAOC,UAAWN,GACzBO,mBACCC,KAAKJ,GAAMK,QAAQ,gBAChBC,EAAMN,EAAKO,GAIXC,IAAWP,OAAOG,KAAKE,GAAKG,OAHb,SAACC,EAAMC,UACH,IAAdL,EAAIK,IAAyBD,IAEe,GAC3CF,EACNL,EAAQS,KAAKL,GACbJ,EAAQS,KAAKJ,EAAWD,EAAKN,OAAOC,UAAWI,OAAQT,EAAUU,OAEpEJ,EA/BXF,OAAOY,eAAeC,QAAS,qBAAuB,IActDA,QAAQC,yBAbR,SAAkCf,OAAMgB,yDAAS,KACvCC,mBACCb,KAAKJ,GAAMkB,IAAI,SAACC,OACbC,EAAQpB,EAAKmB,KACZA,aACAf,KAAKgB,GAAOF,IAAI,YACfG,IAASL,MACFG,GAAOE,GAAQD,EAAMC,QAIjCJ,GAqBXH,QAAQnB,YAAcA,EAItBmB,QAAQQ,QAHR,SAASA,EAAQC,UACNA,EAAKd,OAAO,SAACe,EAAGC,UAAMD,EAAEE,OAAOC,MAAMC,QAAQH,GAAKH,EAAQG,GAAKA,SAmC1EX,QAAQe,YAhCR,SAAqBC,EAAKC,MACH,IAAfD,EAAIE,oBAGFxB,EAA6B,WAAlBV,EAAOgC,EAAI,OACxBtB,GAAYuB,EAAa,KACnBE,EAAI,IAAIlC,sFACZmC,KAAO,aACHD,MAELF,IAAgBvB,EAAU,KACvBsB,EAAI,GAAGK,eAAe,MAGrB,KACKF,EAAI,IAAIlC,0HACZmC,KAAO,aACHD,IALQ,SAQjBN,MAAMC,QAAQE,GAAM,KACfG,EAAI,IAAIlC,sDACZmC,KAAO,aACHD,SAEKH,EAAIrB,OAAO,SAACC,EAAMC,OACvByB,EAAM5B,EAAWG,EAAOA,EAAKoB,UAC5BvB,EACDP,OAAOC,UAAWQ,OAAS0B,GAAM,IAAUnC,OAAOC,UAAWQ,OAAS0B,EAAMzB,UAS1FG,QAAQuB,gBAJR,SAAyBC,OAAMtB,yDAAS,YAE7BrB,EADM2C,EAAKC,UACOvB,IAU7BF,QAAQ0B,eAPR,SAAwBF,OAAMtB,yDAAS,KAC7BhB,EAAOsC,EAAKC,wBACXnC,KAAKJ,GAAMK,QAAQ,wBAA4B,WAArBP,EAAOE,EAAKoC,IACtCpC,EAAKoC,GAAKpB,GAAUoB,EACpBpC,EAAKoC,WAAUpB,EAASoB,eAAYpC,EAAKoC,SACzCpC,GAgBXc,QAAQ2B,uBAbR,SAAgCH,OAAMtB,yDAAS,KACrCC,cACDZ,QAAQ,SAACqC,OACJpC,EAAMoC,EAAMH,MACZH,EAAMM,EAAMN,OACC,WAAftC,EAAOQ,SACD,IAAIP,0DAAkDO,kBAAW8B,iBAEpExB,KAAKX,OAAOC,YAAUc,EAASoB,GAAO9B,KACtC,IAEJW,GAOXH,QAAQ6B,sBAJR,SAA+BL,OAAMtB,yDAAS,KACpC4B,EAAeC,KAAKJ,uBAAuBH,EAAMtB,UAChD6B,KAAKhB,YAAYe"}