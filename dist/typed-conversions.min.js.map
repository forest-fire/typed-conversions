{"version":3,"file":"typed-conversions.min.js","sources":["../lib/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst get = require(\"lodash.get\");\nfunction removeIdPropertyFromHash(hash, idProp = \"id\") {\n    const output = {};\n    Object.keys(hash).map((objId) => {\n        const input = hash[objId];\n        output[objId] = {};\n        Object.keys(input).map(prop => {\n            if (prop !== idProp) {\n                output[objId][prop] = input[prop];\n            }\n        });\n    });\n    return output;\n}\nexports.removeIdPropertyFromHash = removeIdPropertyFromHash;\nfunction keyValueDictionaryToArray(dict, options = {}) {\n    const __key__ = options.key || \"id\";\n    const __value__ = options.value || \"value\";\n    return Object.keys(dict).reduce((result, key) => {\n        return result.concat({ [__key__]: key, [__value__]: dict[key] });\n    }, []);\n}\nexports.keyValueDictionaryToArray = keyValueDictionaryToArray;\nfunction keyValueArrayToDictionary(input, options = {}) {\n    const __key__ = options.key || \"key\";\n    const __value__ = options.value || \"value\";\n    return input.reduce((output, curr) => {\n        const key = curr[__key__];\n        const value = curr[__value__];\n        output[key] = value;\n        return output;\n    }, {});\n}\nexports.keyValueArrayToDictionary = keyValueArrayToDictionary;\nfunction hashToArray(hashObj, __key__ = \"id\") {\n    if (hashObj && typeof hashObj !== \"object\") {\n        throw new Error(\"Cant convert hash-to-array because hash was not passed in: \" + hashObj);\n    }\n    const hash = Object.assign({}, hashObj);\n    const results = [];\n    const isHashArray = Object.keys(hash).every(i => hash[i] === true);\n    const isHashValue = Object.keys(hash).every(i => typeof hash[i] !== \"object\");\n    console.log(isHashArray, isHashValue);\n    Object.keys(hash).map(id => {\n        const obj = typeof hash[id] === \"object\"\n            ? Object.assign({}, hash[id], { [__key__]: id }) : isHashArray\n            ? id\n            : { [__key__]: id, value: hash[id] };\n        results.push(obj);\n    });\n    return results;\n}\nexports.hashToArray = hashToArray;\nfunction flatten(list) {\n    return list.reduce((a, b) => a.concat(Array.isArray(b) ? flatten(b) : b), []);\n}\nexports.flatten = flatten;\nfunction arrayToHash(arr, keyProperty) {\n    if (arr.length === 0) {\n        return {};\n    }\n    const isScalar = typeof arr[0] === \"object\" ? false : true;\n    if (isScalar && keyProperty) {\n        const e = new Error(`You can not have an array of primitive values AND set a keyProperty!`);\n        e.name = \"NotAllowed\";\n        throw e;\n    }\n    if (!keyProperty && !isScalar) {\n        if (arr[0].hasOwnProperty(\"id\")) {\n            keyProperty = \"id\";\n        }\n        else {\n            const e = new Error(`Tried to default to a keyProperty of \"id\" but that property does not appear to be in the array passed in`);\n            e.name = \"NotAllowed\";\n            throw e;\n        }\n    }\n    if (!Array.isArray(arr)) {\n        const e = new Error(`arrayToHash: input was not an array!`);\n        e.name = \"NotAllowed\";\n        throw e;\n    }\n    const output = arr.reduce((prev, curr) => {\n        const key = isScalar ? curr : curr[keyProperty];\n        return isScalar\n            ? Object.assign({}, prev, { [key]: true }) : Object.assign({}, prev, { [key]: curr });\n    }, {});\n    return output;\n}\nexports.arrayToHash = arrayToHash;\nfunction snapshotToArray(snap, idProp = \"id\") {\n    const hash = snap.val() || {};\n    return hashToArray(hash, idProp);\n}\nexports.snapshotToArray = snapshotToArray;\nfunction snapshotToHash(snap, idProp = \"id\") {\n    const hash = snap.val() || {};\n    Object.keys(hash).forEach(key => typeof hash[key] === \"object\"\n        ? (hash[key][idProp] = key)\n        : (hash[key] = { [idProp]: key, value: hash[key] }));\n    return hash;\n}\nexports.snapshotToHash = snapshotToHash;\nfunction snapshotToOrderedArray(snap, idProp = \"id\") {\n    const output = [];\n    snap.forEach((child) => {\n        const obj = child.val();\n        const key = child.key;\n        if (typeof obj !== \"object\") {\n            throw new Error(`Can't create a list from scalar values: \"${obj}\" | \"${key}\"`);\n        }\n        output.push(Object.assign({ [idProp]: key }, obj));\n        return true;\n    });\n    return output;\n}\nexports.snapshotToOrderedArray = snapshotToOrderedArray;\nfunction snapshotToOrderedHash(snap, idProp = \"id\") {\n    const orderedArray = this.snapshotToOrderedArray(snap, idProp);\n    return this.arrayToHash(orderedArray);\n}\nexports.snapshotToOrderedHash = snapshotToOrderedHash;\nfunction getPropertyAcrossDictionaryItems(dictionary, property) {\n    const output = [];\n    Object.keys(dictionary).map(item => {\n        const value = get(dictionary[item], property, undefined);\n        if (value !== undefined) {\n            output.push(value);\n        }\n    });\n    return output;\n}\nexports.getPropertyAcrossDictionaryItems = getPropertyAcrossDictionaryItems;\n//# sourceMappingURL=index.js.map"],"names":["Object","defineProperty","exports","get","require","hashToArray","hashObj","__key__","_typeof","Error","hash","assign","results","isHashArray","keys","every","i","isHashValue","log","map","obj","id","push","removeIdPropertyFromHash","idProp","output","objId","input","prop","keyValueDictionaryToArray","dict","options","key","__value__","value","reduce","result","concat","keyValueArrayToDictionary","curr","flatten","list","a","b","Array","isArray","arrayToHash","arr","keyProperty","length","isScalar","e","name","hasOwnProperty","prev","snapshotToArray","snap","val","snapshotToHash","forEach","snapshotToOrderedArray","child","snapshotToOrderedHash","orderedArray","this","getPropertyAcrossDictionaryItems","dictionary","property","item","undefined"],"mappings":"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"}