{"version":3,"file":"index.js","sources":["../../src/index.ts"],"sourcesContent":["import { IDictionary } from \"common-types\";\nimport { get } from \"lodash-es\";\n\nexport interface ISnapShot {\n  val: () => any;\n  key: string;\n  forEach(mapper: (child: ISnapShot) => boolean): void;\n}\n\nexport function removeIdPropertyFromHash<T = IDictionary>(\n  hash: IDictionary<T>,\n  idProp = \"id\"\n) {\n  const output: any = {};\n  Object.keys(hash).map((objId) => {\n    const input: IDictionary = hash[objId];\n    output[objId] = {};\n    Object.keys(input).map((prop) => {\n      if (prop !== idProp) {\n        output[objId][prop] = input[prop];\n      }\n    });\n  });\n  return output;\n}\n\nexport function keyValueDictionaryToArray<T = any>(\n  dict: IDictionary<T>,\n  options: IDictionary = {}\n) {\n  const __key__ = options.key || \"id\";\n  const __value__ = options.value || \"value\";\n  return Object.keys(dict).reduce((result, key) => {\n    return result.concat({ [__key__]: key, [__value__]: dict[key] });\n  }, []);\n}\n\nexport function keyValueArrayToDictionary<T = any>(\n  input: T[],\n  options: IDictionary = {}\n): IDictionary {\n  const __key__ = options.key || \"key\";\n  const __value__ = options.value || \"value\";\n  return input.reduce((output: any, curr: IDictionary) => {\n    const key = curr[__key__];\n    const value = curr[__value__];\n\n    output[key] = value;\n    return output;\n  }, {});\n}\n\n/**\n * hashToArray\n *\n * Converts a hash data structure of {key: value, key2: value2} to an\n * array of [ {id, value}, {id2, value2} ]. This should happen regardless\n * to whether the values are themselves hashes (which they often are) or\n * scalar values.\n *\n * The one edge case is where all the hashes passed in have a value of \"true\"\n * which indicates that this really just a simple value based array encoded as\n * a hash (as is often the case in Firebase for FK relationships).\n *\n * @param hashObj an object of keys that point to some data payload\n * @param ___key__ the property name on the converted array-of-hashes which will contain the key value; by default this is \"id\"\n */\nexport function hashToArray<T = any>(\n  hashObj: IDictionary<T> | IDictionary<string> | IDictionary<number>,\n  __key__: keyof (T & { id: string }) = \"id\"\n) {\n  if (hashObj && typeof hashObj !== \"object\") {\n    throw new Error(\n      \"Cant convert hash-to-array because hash was not passed in: \" + hashObj\n    );\n  }\n  const hash: IDictionary = { ...{}, ...hashObj };\n  const results: T[] = [];\n  const isHashArray = Object.keys(hash).every((i) => hash[i] === true);\n  const isHashValue = Object.keys(hash).every(\n    (i) => typeof hash[i] !== \"object\"\n  );\n\n  Object.keys(hash).map((id) => {\n    const obj =\n      typeof hash[id] === \"object\"\n        ? { ...hash[id], [__key__]: id }\n        : isHashArray\n        ? id\n        : { [__key__]: id, value: hash[id] };\n\n    results.push(obj);\n  });\n  return results;\n}\n\nexport function flatten<T = any>(list: any): T[] {\n  return list.reduce(\n    (a: any, b: any) => a.concat(Array.isArray(b) ? flatten(b) : b),\n    []\n  );\n}\n\nexport type FunctionProperty<T> = (obj: T) => string;\n\n/**\n * arrayToHash\n *\n * Converts an array of things into a hash/dictionary where \"things\" is a consistent\n * type of data structure (can be either object or primitive)\n *\n * @param arr an array of a particular type\n * @param keyProperty the property that will be used as the dictionaries key; if false\n * then will assign a firebase pushkey\n * @param removeIdProperty allow you to optionally exclude the `id` from the object\n * as it is redundant to the `key` of the hash. By default though, this is _not_ done as\n * Firemodel benefits (and expects) from this duplication.\n */\nexport function arrayToHash<T = any>(\n  arr: T[],\n  keyProperty?: keyof T | FunctionProperty<T>,\n  removeIdProperty: boolean = false\n): IDictionary<T> {\n  if (arr.length === 0) {\n    return {};\n  }\n\n  const isScalar: boolean = typeof arr[0] === \"object\" ? false : true;\n  if (isScalar && keyProperty) {\n    const e = new Error(\n      `You can not have an array of primitive values AND set a keyProperty!`\n    );\n    e.name = \"NotAllowed\";\n    throw e;\n  }\n\n  if (!keyProperty && !isScalar) {\n    if (arr[0].hasOwnProperty(\"id\")) {\n      keyProperty = \"id\" as keyof T;\n    } else {\n      const e = new Error(\n        `Tried to default to a keyProperty of \"id\" but that property does not appear to be in the array passed in`\n      );\n      e.name = \"NotAllowed\";\n      throw e;\n    }\n  }\n\n  if (!Array.isArray(arr)) {\n    const e = new Error(`arrayToHash: input was not an array!`);\n    e.name = \"NotAllowed\";\n    throw e;\n  }\n\n  const output: IDictionary<T> = arr.reduce((prev, curr) => {\n    const key = isScalar\n      ? curr\n      : typeof keyProperty === \"function\"\n      ? (keyProperty(curr) as keyof T)\n      : curr[keyProperty];\n\n    return isScalar\n      ? { ...prev, ...{ [key as any]: true } }\n      : { ...prev, ...{ [key as any]: curr } };\n  }, {});\n\n  return removeIdProperty ? removeIdPropertyFromHash(output) : output;\n}\n\n/**\n * Snapshot to Array (unordered)\n *\n * converts snapshot directly to JS and then converts hash to an\n * array structure but any sorting that came from the server query\n * will be ignored.\n */\nexport function snapshotToArray<T = IDictionary>(\n  snap: ISnapShot,\n  idProp: string = \"id\"\n): T[] {\n  const hash: IDictionary = snap.val() || {};\n\n  return hashToArray(hash, idProp);\n}\n\n/**\n * Converts a Firebase snapshot to JS object with both val() and key\n * represented in the JS object\n *\n * @param snap the Firebase Snapshot\n * @param idProp the property used to store the \"id/key\" of the record\n */\nexport function snapshotToHash<T = IDictionary>(\n  snap: ISnapShot,\n  idProp: string = \"id\"\n): T {\n  const hash: IDictionary = snap.val() || {};\n  Object.keys(hash).forEach((key) =>\n    typeof hash[key] === \"object\"\n      ? (hash[key][idProp] = key)\n      : (hash[key] = { [idProp]: key, value: hash[key] })\n  );\n  return hash as T;\n}\n\n/**\n * Snapshot to Array (ordered)\n *\n * uses Firebase forEach() iterator to gain the appropriate sorting from the query.\n */\nexport function snapshotToOrderedArray<T = IDictionary>(\n  snap: ISnapShot,\n  idProp = \"id\"\n): T[] {\n  const output: T[] = [];\n  snap.forEach((child: ISnapShot) => {\n    const obj: any = child.val();\n    const key: string = child.key;\n    if (typeof obj !== \"object\") {\n      throw new Error(\n        `Can't create a list from scalar values: \"${obj}\" | \"${key}\"`\n      );\n    }\n    output.push({ ...{ [idProp]: key }, ...obj });\n\n    return true;\n  });\n\n  return output as T[];\n}\n\nexport function snapshotToOrderedHash<T = IDictionary>(\n  snap: ISnapShot,\n  idProp = \"id\"\n): IDictionary<T> {\n  const orderedArray = this.snapshotToOrderedArray(snap, idProp);\n  return this.arrayToHash(orderedArray);\n}\n\n/**\n *\n * @param dictionary A dictionary of a structured type\n * @param property Which property in each dictionary item are we getting\n */\nexport function getPropertyAcrossDictionaryItems<T>(\n  dictionary: IDictionary,\n  property: string\n): T[] {\n  const output: any[] = [];\n  Object.keys(dictionary).map((item) => {\n    const value = get(dictionary[item], property);\n    if (value !== undefined) {\n      output.push(value);\n    }\n  });\n\n  return output;\n}\n"],"names":[],"mappings":"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"}